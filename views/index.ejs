<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>智慧農業平台</title>

  <!-- <link rel='stylesheet' type="text/css" href='/css/bootstrap.css' /> -->
  <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"> -->
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/gauge.css">
  <link rel="stylesheet" href="/css/highchart.css">
  <link rel="stylesheet" href="/css/highchart2.css">
	
 
</head>

<body>
  <!-- <h1>Hello world i am h1 tag<h1>
  <a href="./about">goto about</a> -->
<div class="container">
	
		
	
</div>

	<div class="container">
		
			<nav class="navbar navbar-expand-lg navbar-dark bg-info text-white">
		    <a class="navbar-brand" >智慧農業平台</a>
		    <!-- <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
		      <span class="navbar-toggler-icon"></span>
		    </button> -->
			    <div class="collapse navbar-collapse" id="navbarColor02">
			      <ul class="navbar-nav mr-auto">
			        <li class="nav-item active">
			          <a class="nav-link" href="#">區域1 <span class="sr-only">(current)</span></a>
			        </li>
			        <li class="nav-item">
			          <a class="nav-link" href="#">區域2</a>
			        </li>
			        <li class="nav-item">
			          <a class="nav-link" href="#">區域3</a>
			        </li>
			       
			      </ul>
			      <!-- <form class="form-inline">
			        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" />
			        <button class="btn btn-outline-light my-2 my-sm-0" type="submit">Search</button>
			      </form> -->
			    </div>
			</nav>
		
		<div class="row" style="margin-top:20px;">
		    <div class="col-sm ">
		    		<div class="card">
						<div class="card-header bg-info text-white">即時數據</div>
					    <figure class="highcharts-figure ">
						    <div id="container-speed" class="chart-container "></div>
						    <div id="container-rpm" class="chart-container "></div> 
						</figure>
					</div>
		    </div>
		    <div class="col-sm">
					<!-- <figure class="highcharts-figure"> -->
						<div class="card">
							<div class="card-header bg-info text-white">圖表數據</div>
							<div id="container" ></div>
							<div id="container2"  style="margin-top:20px;"></div>
					    </div>
					<!-- </figure> -->
		    </div>
		    <div class="col-sm">
					<div class="card">
						<div class="card-header bg-info text-white">感測數據</div>
						<table class="table table-hover" style="margin-bottom:0;">

								<thead>
									<tr>
									  <th><h6>感測器</h6></th>
									  <th><h6>數值</h6></th>
									  <th><h6>更新時間</h6></th>
									  <!-- <th><h6>test</h6></th> -->
									</tr>
									<tbody>
										<% for ( var i = 0 ; i < creatdata.length ; i++){ %>
							            <tr class= "<%= creatdata[i].name  %>" >
							                <td >
							                    <%= creatdata[i].name  %>
							                </td>
							                <td class="value">
							                    <%= creatdata[i].value  %>
							                </td>
							                <td class="time">
							                    <%= moment(creatdata[i].datetime).format('YYYY-MM-DD HH:mm:ss')  %>
							                </td>
							            </tr>
							            <% } %>
						            </tbody>
								</thead>
				  			
						</table>
					</div>
				
		    </div>
		</div><!-- row end-->
	</div> <!-- container end-->

	
</body>

	
<!-- jQuery library -->
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script> -->
<!-- Popper JS -->
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script> -->
<!-- Latest compiled JavaScript -->
<!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script> -->
<!-- <script type="text/javascript" src="/js/jquery.js"></script> -->
<script src="/js/jquery.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.js"></script>

<script>
	
	$(function(){

		// temp_chart();

		setInterval(function(){
	     $.ajax({
	             url: "/sensor"
	          })
	          .done(function( data ) {
				// $('table:eq(0) tbody').text(data.data[1].value );
				for(var i in data.data){
					$('table:eq(0) tbody  tr.'+data.data[i].name+' td.value').text(data.data[i].value);
					$('table:eq(0) tbody  tr.'+data.data[i].name+' td.time').text(moment.utc(data.data[i].datetime).format('YYYY-MM-DD HH:mm:ss'));
				}
	       
	            console.log( "setInterval of data");
	            // console.log(data.data);
	           
	          });
	},5000);

	temp_chart();
	console.log("456");

	setInterval(function(){
		requestData();
	},10000);

 	// console.log("123");
	});

	
</script>


<script>
	var gaugeOptions = {
	    chart: {
	        type: 'solidgauge',
	        backgroundColor: 'rgba(0,0,0,0)'
	    },

	    title: null,

	    pane: {
	        center: ['50%', '85%'],
	        size: '140%',
	        startAngle: -90,
	        endAngle: 90,
	        background: {
	            backgroundColor: 'rgba(0,0,0,0)',
	            innerRadius: '60%',
	            outerRadius: '100%',
	            shape: 'arc'
	        }
	    },

	    exporting: {
	        enabled: false
	    },

	    tooltip: {
	        enabled: false
	    },

	    // the value axis
	    yAxis: {
	        stops: [
	            [0.1, '#55BF3B'], // green
	            [0.5, '#DDDF0D'], // yellow
	            [0.9, '#DF5353'] // red
	        ],
	        lineWidth: 0,
	        tickWidth: 0,
	        minorTickInterval: null,
	        tickAmount: 2,
	        title: {
	            y: -70
	        },
	        labels: {
	            y: 16
	        }
	    },

	    plotOptions: {
	        solidgauge: {
	            dataLabels: {
	                y: 5,
	                borderWidth: 0,
	                useHTML: true
	            }
	        }
	    }
	};

	// The speed gauge
	var chartSpeed = Highcharts.chart('container-speed', Highcharts.merge(gaugeOptions, {
	    yAxis: {
	        min: 0,
	        max: 200,
	        title: {
	            text: 'Speed'
	        }
	    },

	    credits: {
	        enabled: false
	    },

	    series: [{
	        name: 'Speed',
	        data: [80],
	        dataLabels: {
	            format:
	                '<div style="text-align:center">' +
	                '<span style="font-size:25px">{y}</span><br/>' +
	                '<span style="font-size:12px;opacity:0.4">km/h</span>' +
	                '</div>'
	        },
	        tooltip: {
	            valueSuffix: ' km/h'
	        }
	    }]

	}));

	// The RPM gauge
	var chartRpm = Highcharts.chart('container-rpm', Highcharts.merge(gaugeOptions, {
	    yAxis: {
	        min: 0,
	        max: 5,
	        title: {
	            text: 'RPM'
	        }
	    },

	    series: [{
	        name: 'RPM',
	        data: [1],
	        dataLabels: {
	            format:
	                '<div style="text-align:center">' +
	                '<span style="font-size:25px">{y:.1f}</span><br/>' +
	                '<span style="font-size:12px;opacity:0.4">' +
	                '* 1000 / min' +
	                '</span>' +
	                '</div>'
	        },
	        tooltip: {
	            valueSuffix: ' revolutions/min'
	        }
	    }]

	}));

	// Bring life to the dials
	setInterval(function () {
	    // Speed
	    var point,
	        newVal,
	        inc;

	    if (chartSpeed) {
	        point = chartSpeed.series[0].points[0];
	        inc = Math.round((Math.random() - 0.5) * 100);
	        newVal = point.y + inc;

	        if (newVal < 0 || newVal > 200) {
	            newVal = point.y - inc;
	        }

	        point.update(newVal);
	    }

	    // RPM
	    if (chartRpm) {
	        point = chartRpm.series[0].points[0];
	        inc = Math.random() - 0.5;
	        newVal = point.y + inc;

	        if (newVal < 0 || newVal > 5) {
	            newVal = point.y - inc;
	        }

	        point.update(newVal);
	    }
	}, 2000);


	function appendPoint(chart,date,temp,) {
	chart.series[0].addPoint([date, temp] , true,chart.series[0].points.length > 4 ,true);
	}

	function temp_chart(){
	// Highcharts.chart('container', {
	var options = {
	    chart: {
	    	renderTo: 'container', //顯示在哪一區域
	        type: 'spline',
	        events: {
	        	load: requestData

	                // set up the updating of the chart each second
	                
	            
	        }
	        // animation: Highcharts.svg, // don't animate in old IE
	        // marginRight: 10,
	        
	    },

	    time: {
	        useUTC: true
	    },

	    title: {
	        text: ''
	    },


	    xAxis: {
	    	title:{
					text:"時間"
				},
	        type: 'datetime',
	        // tickPixelInterval: 150
	        

	        labels: {
					formatter: function() {
						return Highcharts.dateFormat('%H:%M:%S', this.value);
					}
				}
	    },

	    yAxis: {
	    	
	        title: {
	            text: '溫度'
	        },
	        // plotLines: [{
	        //     value: 0,
	        //     width: 1,
	        //     color: '#808080'
	        // }]
	    },

	    credits : {
                enabled:false
        },

	    legend: {
	        enabled: false
	    },

	    exporting: {
	        enabled: false
	    },

	    series: [{
	        name: 'temp'
	    }]
	};

	tempchart = new Highcharts.Chart(options)

	// $.ajax({
 //             url: "/sensor"
 //          })
 //          .done(function( data ) {
	// 		for(var i in data.chartdata){

	// 			datetime = moment.utc(data.chartdata[i].datetime).format('YYYY-MM-DD HH:mm:ss');

	// 			datetime = datetime.split(' ');
	// 			date=datetime[0].split('-');
	// 			time=datetime[1].split(':');
	// 			date=Date.UTC(date[0],date[1]-1,date[2],time[0],time[1],time[2]);	

	//           	appendPoint(tempchart,date,data.chartdata[i].value);
	//           	console.log(date);
	// 		}
 //            tempchart.redraw();
             
 //          });
}

function requestData() {
	$.ajax({
	             url: "/chartdata"
	          })
	          .done(function( data ) {
				for(var i in data.chartdata){

					datetime = moment.utc(data.chartdata[i].datetime).format('YYYY-MM-DD HH:mm:ss');

					datetime = datetime.split(' ');
					date=datetime[0].split('-');
					time=datetime[1].split(':');
					date=Date.UTC(date[0],date[1]-1,date[2],time[0],time[1],time[2]);	

		          	appendPoint(tempchart,date,data.chartdata[i].value);
		          	console.log(date);
				}
	            tempchart.redraw();
	             
	          });
	          console.log("123");
}


	Highcharts.chart('container2', {
    chart: {
        type: 'spline',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10,
        events: {
            load: function () {

                // set up the updating of the chart each second
                var series = this.series[0];
                setInterval(function () {
                    var x = (new Date()).getTime(), // current time
                        y = Math.random();
                    series.addPoint([x, y], true, true);
                }, 1000);
            }
        }
    },

    time: {
        useUTC: false
    },

    title: {
        text: 'Live random data'
    },

    accessibility: {
        announceNewData: {
            enabled: true,
            minAnnounceInterval: 15000,
            announcementFormatter: function (allSeries, newSeries, newPoint) {
                if (newPoint) {
                    return 'New point added. Value: ' + newPoint.y;
                }
                return false;
            }
        }
    },

    xAxis: {
        type: 'datetime',
        tickPixelInterval: 150
    },

    yAxis: {
        title: {
            text: 'Value'
        },
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
    },

    tooltip: {
        headerFormat: '<b>{series.name}</b><br/>',
        pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'
    },

    legend: {
        enabled: false
    },

    exporting: {
        enabled: false
    },

    series: [{
        name: 'Random data',
        data: (function () {
            // generate an array of random data
            var data = [],
                time = (new Date()).getTime(),
                i;

            for (i = -19; i <= 0; i += 1) {
                data.push({
                    x: time + i * 1000,
                    y: Math.random()
                });
            }
            return data;
        }())
    }]
});

</script>

</html>